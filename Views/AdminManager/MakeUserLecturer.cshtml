@model IEnumerable<UserRoleType>
@using MyProject.Models

@{
    ViewData["Title"] = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<h1>Users-Roles</h1>

<table class="table-bordered" id="table">
    <thead>
        <tr class="thead-light">
            <th>User Id</th>
            <th>Role Name</th>
            <th>Change privacy to</th>
        </tr>
    <thead>
    <tbody>
        @foreach (var userRoll in Model)
        {
            <tr>
                <td>@userRoll.UserId</td>
                <td>@userRoll.RoleName.ToString()</td>
                <td>
                    @{
                        var otherRoles = UserRollsTypeExtentions.GetOthers(userRoll.RoleName);



                        foreach (var other in otherRoles)
                        {

                            if (other == UserRollsType.Admin)
                            {
                                @Html.ActionLink(other.ToString(), "ChangePrivacy", "AdminManager", new { userId = userRoll.UserId, to = other }
                                    , new { @class = "btn btn-danger ml-2" ,@onclick = "return confirm('Are you sure you want to change the role " +
                                    "of the user?')"})
                            }

                            else
                            {
                                @Html.ActionLink(other.ToString(), "ChangePrivacy", "AdminManager", new { userId = userRoll.UserId, to = other }
                                   , new { @class = "btn btn-warning ml-2",@onclick = "return confirm('Are you sure you want to change the role " +
                                    "of the user?')" })
                            }

                        }
                    }

                </td>
            </tr>
        }
    <tbody>
</table>

@section Scripts{
    <script>
        $(document).ready(function () {
            $('#table').DataTable();//myTable is the id of the table to be displayed as dataTable
        });
    </script>

    
}